name: Build

on:
  push:
    branches: [ "dev", "master" ]
  pull_request:
    branches: [ "dev", "master" ]
  pull_request_target:
    types:
      - opened
    branches:
      - '*/*'

permissions:
  pull-requests: write
  contents: read

jobs:
  prettier_lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn --immutable
    - run: yarn prettier:check
    - run: yarn lint

  unit_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn --immutable
    - run: yarn test --coverage
    - name: Upload to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/
        files: clover.xml
        flags: unittests
        name: codecov-report
        verbose: true

  build_cli:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn --immutable
    - run: yarn build
    - name: Save build
      uses: actions/upload-artifact@v3
      with:
        name: build
        if-no-files-found: error
        path: build

  build_angular:
    runs-on: ubuntu-latest
    needs: build_cli
      
    strategy:
      matrix:
        node-version: [20.x]
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn --immutable
    - run: yarn build
    - run: |
        bin/blui new angular --name=angulartest --lint --prettier --template=blank

  build_react:
    runs-on: ubuntu-latest
    needs: build_cli
          
    strategy:
      matrix:
        node-version: [20.x]
          
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn --immutable
    - run: yarn build
    - run: |
        bin/blui new react --name=reacttest --lint --prettier --language=typescript --template=blank

  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') }}
    needs: [build_cli, build_angular, build_react]
    strategy:
      matrix:
        node-version: [20.x]
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      BRANCH: ${{ github.ref == 'refs/heads/master' && 'master' || 'dev' }}
    steps:
      - uses: actions/checkout@v4
      - name: Download build
        uses: actions/download-artifact@v4.1.7
        with:
          name: build
          path: build
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - run: yarn --immutable
      - run: npm run publish:package -- -b ${{env.BRANCH}}